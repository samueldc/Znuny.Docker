DO $$

DECLARE

erro varchar;

BEGIN

RAISE NOTICE 'Merge iniciado.';

/*
-- EXEMPLO
MERGE INTO PUBLIC.ACL D -- DESTINO
USING PUBLIC_DEV.ACL F -- ORIGEM
ON (F.IDEANEXO = D.IDEANEXO) -- pk ou coluna que garanta a unicidade
 --Se achou, faça update
  DO UPDATE SET D.ARQDADOS = F.ARQDADOS
  -- WHERE ...
  -- DELETE WHERE ...
WHEN NOT MATCHED THEN --Se não achou, faça update
  INSERT( D.IDEANEXO, D.ARQDADOS )
  VALUES ( F.IDEANEXO, F.ARQDADOS )
  -- WHERE ...
*/

-- ACL_SYNC (LIMPA TABELA)
DELETE FROM PUBLIC.ACL_SYNC;

-- ACL (LIMPA TABELA)
DELETE FROM PUBLIC.ACL;
SELECT SETVAL('acl_id_seq', 1, false);

-- ACL
INSERT INTO PUBLIC.ACL
(SELECT * FROM PUBLIC_DEV.ACL)
;

-- ACL_SYNC
INSERT INTO PUBLIC.ACL_SYNC
(SELECT * FROM PUBLIC_DEV.ACL_SYNC)
;

-- GENERAL_CATALOG
INSERT INTO PUBLIC.GENERAL_CATALOG
(SELECT * FROM PUBLIC_DEV.GENERAL_CATALOG)
ON CONFLICT (ID)
DO UPDATE SET
GENERAL_CATALOG_CLASS = EXCLUDED.GENERAL_CATALOG_CLASS
, NAME = EXCLUDED.NAME
, VALID_ID = EXCLUDED.VALID_ID
, COMMENTS = EXCLUDED.COMMENTS
, CREATE_TIME = EXCLUDED.CREATE_TIME
, CREATE_BY = EXCLUDED.CREATE_BY
, CHANGE_TIME = EXCLUDED.CHANGE_TIME
, CHANGE_BY = EXCLUDED.CHANGE_BY
;

-- GENERAL_CATALOG_PREFERENCES (LIMPA)
DELETE FROM PUBLIC.GENERAL_CATALOG_PREFERENCES;

-- GENERAL_CATALOG_PREFERENCES
INSERT INTO PUBLIC.GENERAL_CATALOG_PREFERENCES
(SELECT * FROM PUBLIC_DEV.GENERAL_CATALOG_PREFERENCES)
;

-- CONFIGITEM_DEFINITION
INSERT INTO PUBLIC.CONFIGITEM_DEFINITION
(SELECT * FROM PUBLIC_DEV.CONFIGITEM_DEFINITION)
ON CONFLICT (ID)
DO UPDATE SET
CLASS_ID = EXCLUDED.CLASS_ID
, CONFIGITEM_DEFINITION = EXCLUDED.CONFIGITEM_DEFINITION
, VERSION = EXCLUDED.VERSION
, CREATE_TIME = EXCLUDED.CREATE_TIME
, CREATE_BY = EXCLUDED.CREATE_BY
;

-- CONFIGITEM_HISTORY_TYPE
INSERT INTO PUBLIC.CONFIGITEM_HISTORY_TYPE
(SELECT * FROM PUBLIC_DEV.CONFIGITEM_HISTORY_TYPE)
ON CONFLICT (ID)
DO UPDATE SET
NAME = EXCLUDED.NAME
, COMMENTS = EXCLUDED.COMMENTS
, VALID_ID = EXCLUDED.VALID_ID
, CREATE_TIME = EXCLUDED.CREATE_TIME
, CREATE_BY = EXCLUDED.CREATE_BY
, CHANGE_TIME = EXCLUDED.CHANGE_TIME
, CHANGE_BY = EXCLUDED.CHANGE_BY
;

-- DYNAMIC_FIELD
INSERT INTO PUBLIC.DYNAMIC_FIELD
(SELECT * FROM PUBLIC_DEV.DYNAMIC_FIELD)
ON CONFLICT (ID)
DO UPDATE SET
INTERNAL_FIELD = EXCLUDED.INTERNAL_FIELD
, NAME = EXCLUDED.NAME
, LABEL = EXCLUDED.LABEL
, FIELD_ORDER = EXCLUDED.FIELD_ORDER
, FIELD_TYPE = EXCLUDED.FIELD_TYPE
, OBJECT_TYPE = EXCLUDED.OBJECT_TYPE
, CONFIG = EXCLUDED.CONFIG
, VALID_ID = EXCLUDED.VALID_ID
, CREATE_TIME = EXCLUDED.CREATE_TIME
, CREATE_BY = EXCLUDED.CREATE_BY
, CHANGE_TIME = EXCLUDED.CHANGE_TIME
, CHANGE_BY = 1
;

-- GENERIC_AGENT_JOBS (LIMPA)
DELETE FROM PUBLIC.GENERIC_AGENT_JOBS;
-- DELETE FROM PUBLIC_DEV.GENERIC_AGENT_JOBS WHERE JOB_KEY = 'ScheduleLastRunUnixTime';
-- DELETE FROM PUBLIC_DEV.GENERIC_AGENT_JOBS WHERE JOB_KEY = 'ScheduleLastRun';

-- GENERIC_AGENT_JOBS
INSERT INTO PUBLIC.GENERIC_AGENT_JOBS
(SELECT * FROM PUBLIC_DEV.GENERIC_AGENT_JOBS)
;

-- GI_WEBSERVICE_CONFIG
INSERT INTO PUBLIC.GI_WEBSERVICE_CONFIG
(SELECT * FROM PUBLIC_DEV.GI_WEBSERVICE_CONFIG)
ON CONFLICT (ID)
DO UPDATE SET
NAME = EXCLUDED.NAME
, CONFIG = EXCLUDED.CONFIG
, VALID_ID = EXCLUDED.VALID_ID
, CREATE_TIME = EXCLUDED.CREATE_TIME
, CREATE_BY = EXCLUDED.CREATE_BY
, CHANGE_TIME = EXCLUDED.CHANGE_TIME
, CHANGE_BY = EXCLUDED.CHANGE_BY
;

-- GI_WEBSERVICE_CONFIG_HISTORY
INSERT INTO PUBLIC.GI_WEBSERVICE_CONFIG_HISTORY
(SELECT * FROM PUBLIC_DEV.GI_WEBSERVICE_CONFIG_HISTORY)
ON CONFLICT (ID)
DO UPDATE SET
CONFIG_ID = EXCLUDED.CONFIG_ID
, CONFIG = EXCLUDED.CONFIG
, CONFIG_MD5 = EXCLUDED.CONFIG_MD5
, CREATE_TIME = EXCLUDED.CREATE_TIME
, CREATE_BY = EXCLUDED.CREATE_BY
, CHANGE_TIME = EXCLUDED.CHANGE_TIME
, CHANGE_BY = EXCLUDED.CHANGE_BY
;

-- GROUP_ROLE => LIMPA TABELA PRIMEIRO
DELETE FROM PUBLIC.GROUP_ROLE;

-- GROUPS
INSERT INTO PUBLIC.PERMISSION_GROUPS
(SELECT * FROM PUBLIC_DEV.PERMISSION_GROUPS)
ON CONFLICT (ID)
DO UPDATE SET
NAME = EXCLUDED.NAME
, COMMENTS = EXCLUDED.COMMENTS
, VALID_ID = EXCLUDED.VALID_ID
, CREATE_TIME = EXCLUDED.CREATE_TIME
, CREATE_BY = EXCLUDED.CREATE_BY
, CHANGE_TIME = EXCLUDED.CHANGE_TIME
, CHANGE_BY = EXCLUDED.CHANGE_BY
;

-- IMEXPORT_SEARCH (LIMPA TABELA)
DELETE FROM PUBLIC.IMEXPORT_SEARCH;
SELECT SETVAL('imexport_search_id_seq', 1, false);

-- IMEXPORT_MAPPING_OBJECT (LIMPA TABELA)
DELETE FROM PUBLIC.IMEXPORT_MAPPING_OBJECT;
SELECT SETVAL('imexport_mapping_object_id_seq', 1, false);

-- IMEXPORT_OBJECT (LIMPA TABELA)
DELETE FROM PUBLIC.IMEXPORT_OBJECT;
SELECT SETVAL('imexport_object_id_seq', 1, false);

-- IMEXPORT_MAPPING_FORMAT (LIMPA TABELA)
DELETE FROM PUBLIC.IMEXPORT_MAPPING_FORMAT;
SELECT SETVAL('imexport_mapping_format_id_seq', 1, false);

-- IMEXPORT_FORMAT (LIMPA TABELA)
DELETE FROM PUBLIC.IMEXPORT_FORMAT;
SELECT SETVAL('imexport_format_id_seq', 1, false);

-- IMEXPORT_MAPPING (LIMPA TABELA)
DELETE FROM PUBLIC.IMEXPORT_MAPPING;
SELECT SETVAL('imexport_mapping_id_seq', 1, false);

-- IMEXPORT_TEMPLATE (LIMPA TABELA)
DELETE FROM PUBLIC.IMEXPORT_TEMPLATE;
SELECT SETVAL('imexport_template_id_seq', 1, false);

-- IMEXPORT_TEMPLATE
INSERT INTO PUBLIC.IMEXPORT_TEMPLATE
(SELECT * FROM PUBLIC_DEV.IMEXPORT_TEMPLATE)
ON CONFLICT (ID)
DO UPDATE SET
IMEXPORT_OBJECT = EXCLUDED.IMEXPORT_OBJECT
, IMEXPORT_FORMAT = EXCLUDED.IMEXPORT_FORMAT
, NAME = EXCLUDED.NAME
, VALID_ID = EXCLUDED.VALID_ID
, COMMENTS = EXCLUDED.COMMENTS
, CREATE_TIME = EXCLUDED.CREATE_TIME
, CREATE_BY = EXCLUDED.CREATE_BY
, CHANGE_TIME = EXCLUDED.CHANGE_TIME
, CHANGE_BY = EXCLUDED.CHANGE_BY
;

-- IMEXPORT_MAPPING
INSERT INTO PUBLIC.IMEXPORT_MAPPING
(SELECT * FROM PUBLIC_DEV.IMEXPORT_MAPPING)
ON CONFLICT (ID)
DO NOTHING
;

-- IMEXPORT_FORMAT
INSERT INTO PUBLIC.IMEXPORT_FORMAT
(SELECT * FROM PUBLIC_DEV.IMEXPORT_FORMAT)
ON CONFLICT (ID)
DO NOTHING
;

-- IMEXPORT_MAPPING_FORMAT
INSERT INTO PUBLIC.IMEXPORT_MAPPING_FORMAT
(SELECT * FROM PUBLIC_DEV.IMEXPORT_MAPPING_FORMAT)
ON CONFLICT (ID)
DO NOTHING
;

-- IMEXPORT_OBJECT
INSERT INTO PUBLIC.IMEXPORT_OBJECT
(SELECT * FROM PUBLIC_DEV.IMEXPORT_OBJECT)
ON CONFLICT (ID)
DO UPDATE SET
TEMPLATE_ID = EXCLUDED.TEMPLATE_ID
, DATA_KEY = EXCLUDED.DATA_KEY
, DATA_VALUE = EXCLUDED.DATA_VALUE
;

-- IMEXPORT_MAPPING_OBJECT
INSERT INTO PUBLIC.IMEXPORT_MAPPING_OBJECT
(SELECT * FROM PUBLIC_DEV.IMEXPORT_MAPPING_OBJECT)
ON CONFLICT (ID)
DO NOTHING
;

-- IMEXPORT_SEARCH
INSERT INTO PUBLIC.IMEXPORT_SEARCH
(SELECT * FROM PUBLIC_DEV.IMEXPORT_SEARCH)
ON CONFLICT (ID)
DO NOTHING
;

-- NOTIFICATION_EVENT_MESSAGE (LIMPA TABELA)
DELETE FROM PUBLIC.NOTIFICATION_EVENT_MESSAGE;
SELECT SETVAL('notification_event_message_id_seq', 1, false);

-- NOTIFICATION_EVENT_ITEM (LIMPA TABELA)
DELETE FROM PUBLIC.NOTIFICATION_EVENT_ITEM;

-- NOTIFICATION_EVENT (LIMPA TABELA)
DELETE FROM PUBLIC.NOTIFICATION_EVENT;
SELECT SETVAL('notification_event_id_seq', 1, false);

-- NOTIFICATION_EVENT
INSERT INTO PUBLIC.NOTIFICATION_EVENT
(SELECT * FROM PUBLIC_DEV.NOTIFICATION_EVENT)
ON CONFLICT (ID)
DO NOTHING
;

-- NOTIFICATION_EVENT_ITEM
INSERT INTO PUBLIC.NOTIFICATION_EVENT_ITEM
(SELECT * FROM PUBLIC_DEV.NOTIFICATION_EVENT_ITEM)
;

-- NOTIFICATION_EVENT_MESSAGE
INSERT INTO PUBLIC.NOTIFICATION_EVENT_MESSAGE
(SELECT * FROM PUBLIC_DEV.NOTIFICATION_EVENT_MESSAGE)
ON CONFLICT (ID)
DO NOTHING
;

-- PACKAGE_REPOSITORY
INSERT INTO PUBLIC.PACKAGE_REPOSITORY
(SELECT * FROM PUBLIC_DEV.PACKAGE_REPOSITORY)
ON CONFLICT (ID)
DO UPDATE SET
NAME = EXCLUDED.NAME
, VERSION = EXCLUDED.VERSION
, VENDOR = EXCLUDED.VENDOR
, INSTALL_STATUS = EXCLUDED.INSTALL_STATUS
, FILENAME = EXCLUDED.FILENAME
, CONTENT_TYPE = EXCLUDED.CONTENT_TYPE
, CONTENT = EXCLUDED.CONTENT
, CREATE_TIME = EXCLUDED.CREATE_TIME
, CREATE_BY = EXCLUDED.CREATE_BY
, CHANGE_TIME = EXCLUDED.CHANGE_TIME
, CHANGE_BY = EXCLUDED.CHANGE_BY
;

-- PM_ENTITY_SYNC (LIMPA TABELA)
DELETE FROM PUBLIC.PM_ENTITY_SYNC;

-- PM_TRANSITION_ACTION (LIMPA TABELA)
DELETE FROM PUBLIC.PM_TRANSITION_ACTION;
SELECT SETVAL('pm_transition_action_id_seq', 1, false);

-- PM_TRANSITION (LIMPA TABELA)
DELETE FROM PUBLIC.PM_TRANSITION;
SELECT SETVAL('pm_transition_id_seq', 1, false);

-- PM_ACTIVITY_DIALOG (LIMPA TABELA)
DELETE FROM PUBLIC.PM_ACTIVITY_DIALOG;
SELECT SETVAL('pm_activity_dialog_id_seq', 1, false);

-- PM_ACTIVITY (LIMPA TABELA)
DELETE FROM PUBLIC.PM_ACTIVITY;
SELECT SETVAL('pm_activity_id_seq', 1, false);

-- PM_PROCESS (LIMPA TABELA)
DELETE FROM PUBLIC.PM_PROCESS;
SELECT SETVAL('pm_process_id_seq', 1, false);

-- PM_PROCESS
INSERT INTO PUBLIC.PM_PROCESS
(SELECT * FROM PUBLIC_DEV.PM_PROCESS)
ON CONFLICT (ID)
DO NOTHING
;

-- PM_ACTIVITY
INSERT INTO PUBLIC.PM_ACTIVITY
(SELECT * FROM PUBLIC_DEV.PM_ACTIVITY)
ON CONFLICT (ID)
DO NOTHING
;

-- PM_ACTIVITY_DIALOG
INSERT INTO PUBLIC.PM_ACTIVITY_DIALOG
(SELECT * FROM PUBLIC_DEV.PM_ACTIVITY_DIALOG)
ON CONFLICT (ID)
DO NOTHING
;

-- PM_TRANSITION
INSERT INTO PUBLIC.PM_TRANSITION
(SELECT * FROM PUBLIC_DEV.PM_TRANSITION)
ON CONFLICT (ID)
DO NOTHING
;

-- PM_TRANSITION_ACTION
INSERT INTO PUBLIC.PM_TRANSITION_ACTION
(SELECT * FROM PUBLIC_DEV.PM_TRANSITION_ACTION)
ON CONFLICT (ID)
DO NOTHING
;

-- PM_ENTITY_SYNC
INSERT INTO PUBLIC.PM_ENTITY_SYNC
(SELECT * FROM PUBLIC_DEV.PM_ENTITY_SYNC)
;

-- POSTMASTER_FILTER (LIMPA TABELA)
DELETE FROM PUBLIC.POSTMASTER_FILTER;

-- POSTMASTER_FILTER
INSERT INTO PUBLIC.POSTMASTER_FILTER
(SELECT * FROM PUBLIC_DEV.POSTMASTER_FILTER)
;

-- SYSTEM_ADDRESS (TEM REFERÊNCIA CIRCULAR COM QUEUE)
INSERT INTO PUBLIC.SYSTEM_ADDRESS
(SELECT * FROM PUBLIC_DEV.SYSTEM_ADDRESS)
ON CONFLICT (ID)
DO UPDATE SET
VALUE0 = EXCLUDED.VALUE0
, VALUE1 = EXCLUDED.VALUE1
, VALUE2 = EXCLUDED.VALUE2
, VALUE3 = EXCLUDED.VALUE3
, QUEUE_ID = EXCLUDED.QUEUE_ID
, COMMENTS = EXCLUDED.COMMENTS
, VALID_ID = EXCLUDED.VALID_ID
, CREATE_TIME = EXCLUDED.CREATE_TIME
, CREATE_BY = EXCLUDED.CREATE_BY
, CHANGE_TIME = EXCLUDED.CHANGE_TIME
, CHANGE_BY = EXCLUDED.CHANGE_BY
;

-- QUEUE (TEM REFERÊNCIA CIRCULAR COM SYSTEM_ADDRESS)
INSERT INTO PUBLIC.QUEUE
(SELECT * FROM PUBLIC_DEV.QUEUE)
ON CONFLICT (ID)
DO UPDATE SET
NAME = EXCLUDED.NAME
, GROUP_ID = EXCLUDED.GROUP_ID
, UNLOCK_TIMEOUT = EXCLUDED.UNLOCK_TIMEOUT
, FIRST_RESPONSE_TIME = EXCLUDED.FIRST_RESPONSE_TIME
, FIRST_RESPONSE_NOTIFY = EXCLUDED.FIRST_RESPONSE_NOTIFY
, UPDATE_TIME = EXCLUDED.UPDATE_TIME
, UPDATE_NOTIFY = EXCLUDED.UPDATE_NOTIFY
, SOLUTION_TIME = EXCLUDED.SOLUTION_TIME
, SOLUTION_NOTIFY = EXCLUDED.SOLUTION_NOTIFY
, SYSTEM_ADDRESS_ID = EXCLUDED.SYSTEM_ADDRESS_ID
, CALENDAR_NAME = EXCLUDED.CALENDAR_NAME
, DEFAULT_SIGN_KEY = EXCLUDED.DEFAULT_SIGN_KEY
, SALUTATION_ID = EXCLUDED.SALUTATION_ID
, SIGNATURE_ID = EXCLUDED.SIGNATURE_ID
, FOLLOW_UP_ID = EXCLUDED.FOLLOW_UP_ID
, FOLLOW_UP_LOCK = EXCLUDED.FOLLOW_UP_LOCK
, COMMENTS = EXCLUDED.COMMENTS
, VALID_ID = EXCLUDED.VALID_ID
, CREATE_TIME = EXCLUDED.CREATE_TIME
, CREATE_BY = EXCLUDED.CREATE_BY
, CHANGE_TIME = EXCLUDED.CHANGE_TIME
, CHANGE_BY = EXCLUDED.CHANGE_BY
;

-- OAUTH2_TOKEN (LIMPA TABELA)
DELETE FROM PUBLIC.OAUTH2_TOKEN;
SELECT SETVAL('oauth2_token_id_seq', 1, false);

-- OAUTH2_TOKEN_CONFIG (LIMPA TABELA)
DELETE FROM PUBLIC.OAUTH2_TOKEN_CONFIG;
SELECT SETVAL('oauth2_token_config_id_seq', 1, false);

-- OAUTH2_TOKEN_CONFIG
INSERT INTO PUBLIC.OAUTH2_TOKEN_CONFIG
(SELECT * FROM PUBLIC_DEV.OAUTH2_TOKEN_CONFIG)
ON CONFLICT (ID)
DO NOTHING
;

-- OAUTH2_TOKEN
INSERT INTO PUBLIC.OAUTH2_TOKEN
(SELECT * FROM PUBLIC_DEV.OAUTH2_TOKEN)
ON CONFLICT (ID)
DO NOTHING
;

-- MAIL_ACCOUNT
INSERT INTO PUBLIC.MAIL_ACCOUNT
(SELECT * FROM PUBLIC_DEV.MAIL_ACCOUNT)
ON CONFLICT (ID)
DO UPDATE SET
LOGIN = EXCLUDED.LOGIN
, PW = EXCLUDED.PW
, HOST = EXCLUDED.HOST
, ACCOUNT_TYPE = EXCLUDED.ACCOUNT_TYPE
, QUEUE_ID = EXCLUDED.QUEUE_ID
, TRUSTED = EXCLUDED.TRUSTED
, IMAP_FOLDER = EXCLUDED.IMAP_FOLDER
, AUTHENTICATION_TYPE = EXCLUDED.AUTHENTICATION_TYPE
, OAUTH2_TOKEN_CONFIG_ID = EXCLUDED.OAUTH2_TOKEN_CONFIG_ID
, COMMENTS = EXCLUDED.COMMENTS
, VALID_ID = EXCLUDED.VALID_ID
, CREATE_TIME = EXCLUDED.CREATE_TIME
, CREATE_BY = EXCLUDED.CREATE_BY
, CHANGE_TIME = EXCLUDED.CHANGE_TIME
, CHANGE_BY = EXCLUDED.CHANGE_BY
;

-- QUEUE_PREFERENCES (LIMPA TABELA)
DELETE FROM PUBLIC.QUEUE_PREFERENCES;

-- QUEUE_PREFERENCES
INSERT INTO PUBLIC.QUEUE_PREFERENCES
(SELECT * FROM PUBLIC_DEV.QUEUE_PREFERENCES)
;

-- ROLES
INSERT INTO PUBLIC.ROLES
(SELECT * FROM PUBLIC_DEV.ROLES)
ON CONFLICT (ID)
DO UPDATE SET
NAME = EXCLUDED.NAME
, COMMENTS = EXCLUDED.COMMENTS
, VALID_ID = EXCLUDED.VALID_ID
, CREATE_TIME = EXCLUDED.CREATE_TIME
, CREATE_BY = EXCLUDED.CREATE_BY
, CHANGE_TIME = EXCLUDED.CHANGE_TIME
, CHANGE_BY = EXCLUDED.CHANGE_BY
;

-- GROUP_ROLE (LIMPA)
DELETE FROM PUBLIC.GROUP_ROLE;

-- GROUP_ROLE
INSERT INTO PUBLIC.GROUP_ROLE
(SELECT * FROM PUBLIC_DEV.GROUP_ROLE)
;

-- SERVICE
INSERT INTO PUBLIC.SERVICE
(SELECT * FROM PUBLIC_DEV.SERVICE)
ON CONFLICT (ID)
DO UPDATE SET
NAME = EXCLUDED.NAME
, VALID_ID = EXCLUDED.VALID_ID
, COMMENTS = EXCLUDED.COMMENTS
, CREATE_TIME = EXCLUDED.CREATE_TIME
, CREATE_BY = EXCLUDED.CREATE_BY
, CHANGE_TIME = EXCLUDED.CHANGE_TIME
, CHANGE_BY = EXCLUDED.CHANGE_BY
, TYPE_ID = EXCLUDED.TYPE_ID
, CRITICALITY = EXCLUDED.CRITICALITY
;

-- SERVICE_PREFERENCES (LIMPA TABELA)
DELETE FROM PUBLIC.SERVICE_PREFERENCES;

-- SERVICE_PREFERENCES
INSERT INTO PUBLIC.SERVICE_PREFERENCES
(SELECT * FROM PUBLIC_DEV.SERVICE_PREFERENCES)
;

-- SERVICE_CUSTOMER_USER (LIMPA TABELA)
DELETE FROM PUBLIC.SERVICE_CUSTOMER_USER;

-- SERVICE_CUSTOMER_USER
INSERT INTO PUBLIC.SERVICE_CUSTOMER_USER
(SELECT * FROM PUBLIC_DEV.SERVICE_CUSTOMER_USER)
;


-- SLA
INSERT INTO PUBLIC.SLA
(SELECT * FROM PUBLIC_DEV.SLA)
ON CONFLICT (ID)
DO UPDATE SET
NAME = EXCLUDED.NAME
, CALENDAR_NAME = EXCLUDED.CALENDAR_NAME
, FIRST_RESPONSE_TIME = EXCLUDED.FIRST_RESPONSE_TIME
, FIRST_RESPONSE_NOTIFY = EXCLUDED.FIRST_RESPONSE_NOTIFY
, UPDATE_TIME = EXCLUDED.UPDATE_TIME
, UPDATE_NOTIFY = EXCLUDED.UPDATE_NOTIFY
, SOLUTION_TIME = EXCLUDED.SOLUTION_TIME
, SOLUTION_NOTIFY = EXCLUDED.SOLUTION_NOTIFY
, VALID_ID = EXCLUDED.VALID_ID
, COMMENTS = EXCLUDED.COMMENTS
, CREATE_TIME = EXCLUDED.CREATE_TIME
, CREATE_BY = EXCLUDED.CREATE_BY
, CHANGE_TIME = EXCLUDED.CHANGE_TIME
, CHANGE_BY = EXCLUDED.CHANGE_BY
, TYPE_ID = EXCLUDED.TYPE_ID
, MIN_TIME_BET_INCIDENTS = EXCLUDED.MIN_TIME_BET_INCIDENTS
;

-- SLA_PREFERENCES (LIMPA TABELA)
DELETE FROM PUBLIC.SLA_PREFERENCES;

-- SLA_PREFERENCES
INSERT INTO PUBLIC.SLA_PREFERENCES
(SELECT * FROM PUBLIC_DEV.SLA_PREFERENCES)
;

-- SERVICE_SLA (LIMPA TABELA)
DELETE FROM PUBLIC.SERVICE_SLA;

-- SERVICE_SLA
INSERT INTO PUBLIC.SERVICE_SLA
(SELECT * FROM PUBLIC_DEV.SERVICE_SLA)
;

-- TICKET_STATE
INSERT INTO PUBLIC.TICKET_STATE
(SELECT * FROM PUBLIC_DEV.TICKET_STATE)
ON CONFLICT (ID)
DO UPDATE SET
NAME = EXCLUDED.NAME
, COMMENTS = EXCLUDED.COMMENTS
, TYPE_ID = EXCLUDED.TYPE_ID
, VALID_ID = EXCLUDED.VALID_ID
, CREATE_TIME = EXCLUDED.CREATE_TIME
, CREATE_BY = EXCLUDED.CREATE_BY
, CHANGE_TIME = EXCLUDED.CHANGE_TIME
, CHANGE_BY = EXCLUDED.CHANGE_BY
;

-- TICKET_TYPE
INSERT INTO PUBLIC.TICKET_TYPE
(SELECT * FROM PUBLIC_DEV.TICKET_TYPE)
ON CONFLICT (ID)
DO UPDATE SET
NAME = EXCLUDED.NAME
, VALID_ID = EXCLUDED.VALID_ID
, CREATE_TIME = EXCLUDED.CREATE_TIME
, CREATE_BY = EXCLUDED.CREATE_BY
, CHANGE_TIME = EXCLUDED.CHANGE_TIME
, CHANGE_BY = EXCLUDED.CHANGE_BY
;

-- SYSCONFIG_MODIFIED_VERSION (LIMPA TABELA)
DELETE FROM PUBLIC.SYSCONFIG_MODIFIED_VERSION;
SELECT SETVAL('sysconfig_modified_version_id_seq', 1, false);

-- SYSCONFIG_DEFAULT_VERSION (LIMPA TABELA)
DELETE FROM PUBLIC.SYSCONFIG_DEFAULT_VERSION;
SELECT SETVAL('sysconfig_default_version_id_seq', 1, false);

-- SYSCONFIG_MODIFIED (LIMPA TABELA)
DELETE FROM PUBLIC.SYSCONFIG_MODIFIED;
SELECT SETVAL('sysconfig_modified_id_seq', 1, false);

-- SYSCONFIG_DEFAULT (LIMPA TABELA)
DELETE FROM PUBLIC.SYSCONFIG_DEFAULT;
SELECT SETVAL('sysconfig_default_id_seq', 1, false);

-- SYSCONFIG_DEFAULT
INSERT INTO PUBLIC.SYSCONFIG_DEFAULT
(SELECT * FROM PUBLIC_DEV.SYSCONFIG_DEFAULT)
;

-- SYSCONFIG_DEFAULT_VERSION
INSERT INTO PUBLIC.SYSCONFIG_DEFAULT_VERSION
(SELECT * FROM PUBLIC_DEV.SYSCONFIG_DEFAULT_VERSION)
;

-- SYSCONFIG_DEPLOYMENT_LOCK (LIMPA TABELA)
DELETE FROM PUBLIC.SYSCONFIG_DEPLOYMENT_LOCK;
SELECT SETVAL('sysconfig_deployment_lock_id_seq', 1, false);

-- SYSCONFIG_DEPLOYMENT (LIMPA TABELA)
DELETE FROM PUBLIC.SYSCONFIG_DEPLOYMENT;
SELECT SETVAL('sysconfig_deployment_id_seq', 1, false);

-- SYSCONFIG_DEPLOYMENT
INSERT INTO PUBLIC.SYSCONFIG_DEPLOYMENT
(SELECT * FROM PUBLIC_DEV.SYSCONFIG_DEPLOYMENT)
;

-- SYSCONFIG_DEPLOYMENT_LOCK
INSERT INTO PUBLIC.SYSCONFIG_DEPLOYMENT_LOCK
(SELECT * FROM PUBLIC_DEV.SYSCONFIG_DEPLOYMENT_LOCK)
;

-- SYSCONFIG_MODIFIED
INSERT INTO PUBLIC.SYSCONFIG_MODIFIED
(SELECT * FROM PUBLIC_DEV.SYSCONFIG_MODIFIED)
;

-- SYSCONFIG_MODIFIED_VERSION
INSERT INTO PUBLIC.SYSCONFIG_MODIFIED_VERSION
(SELECT * FROM PUBLIC_DEV.SYSCONFIG_MODIFIED_VERSION)
;

-- UPDATE PUBLIC.MAIL_ACCOUNT SET VALID_ID = 1 WHERE ID = 21;

RAISE NOTICE 'Merge executado com sucesso!';

EXCEPTION
	WHEN OTHERS THEN
    GET STACKED DIAGNOSTICS erro = MESSAGE_TEXT;
    RAISE NOTICE 'Ocorreu um erro: %', erro;
		ROLLBACK;

END;
$$